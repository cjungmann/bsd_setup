#!/usr/bin/env bash

source list_toggler

announce() { echo "[34;1m${1}[m"; }

is_root() { [ "$USER" == "root" ]; }
is_bsd() { [[ $( uname ) =~ "BSD" ]]; }

find_newest_package()
{
    base="$1"
    IFS=$'\n'
    rexp1="^${base}[[:digit:]]+-[[:digit:]]+"
    rexp2="^${base}[[:digit:]]+-[[:alnum:]]+"
    local -a candidates
    candidates=( $( pkg search "$base" | grep -E -e $rexp1 ) )
    if [ $? -ne 0 ] || [ "${#candidates[@]}" -eq 0 ]; then
        candidates=( $( pkg search "$base" | grep -E -e $rexp2 ) )
        if [ $? -ne 0 ] || [ "${#candidates[@]}" -eq 0 ]; then
            echo "Unable to find package for $base." >&2
            return 1
        fi
    fi
    
    IFS=$' '
    local -a canparts=( ${candidates[@]: -1:1} )
    echo "${canparts[0]}"
    return 0
}

make_pkg_array()
{
    local package="$1"
    local -i force="$2"
    echo "pkg"
    echo "install"
    if [ "$force" -eq 0 ]; then
        echo " -n"   # needs preceeding space for it to print (?!)
    fi
    echo "$package"
}

install_apache()
{
    local -i force="${1:-0}"
    local package=$( find_newest_package apache )

    announce "Installing Apache ($package)"

    if [ "$package" ]; then
        local -a args=( $( make_pkg_array $package $force ) )
        "${args[@]}"
        echo
    fi
}

install_fastcgi()
{
    local -i force="${1:-0}"
    local -a options=( $( pkg search fastcgi | grep -Eo -e ap[[:digit:]]+-mod_fastgi ) )
    local package
    if [ "${#options[@]}" -gt 0 ]; then
        package=( ${options[@]: -1:1} )
    fi

    announce "Installing FastCGI ($package)"

    if [ "$package" ]; then
        local -a args=( $( make_pkg_array $package $force ) )
        "${args[@]}"
        echo
    fi
}

install_mariadb()
{
    local -i force="${1:-0}"
    local package=$( find_newest_package mariadb )

    announce "Installing MariaDB ($package)"

    if [ "$package" ]; then
        local -a args=( $( make_pkg_array $package $force ) )
        "${args[@]}"
        echo
    fi
}

install_php()
{
    announce "Installing PHP"
    local -i force="${1:-0}"
    local package=$( find_newest_package php )

    announce "Installing PHP ($package)"

    if [ "$package" ]; then
        local -a args=( $( make_pkg_array $package $force ) )
        "${args[@]}"
        echo
    fi
}

install_from_guidance()
{
    local name_apps="$1"
    local name_choices="$2"

    local -n apps="$name_apps"
    local -n choices="$name_choices"
    local -i value
    local app_loader

    for app in "${apps[@]}"; do
        value="${choices[$app]}"
        if [ "$value" -ne 0 ]; then
            app_loader="install_${app}"
            $app_loader
        else
            echo "Not installing $app"
        fi
    done
}





## list_toggler Customizations:

toggler_print_choice()
{
    local key="$1"
    local -i value="$2" hilite="$3"
    local lineval="$key"

    if [ "$value" -eq 0 ]; then
        lineval="[31;1m$lineval NOT selected"
    else
        lineval="[32;1m$lineval selected"
    fi

    if [ "$hilite" -ne 0 ]; then
        lineval="[43m${lineval}"
    fi

    echo "$lineval[m"
}

T_INTRO="Please select the packages you want to install:"$'\n'

########################
######### Main #########
########################

if is_bsd; then
    if is_root; then
        declare -a packages=( apache mariadb fastcgi php )
        declare -A guidance

        if toggler "packages" "guidance"; then
            install_from_guidance "packages" "guidance"
        fi
    else
        echo "You must be root to install software."
    fi
else
    echo "You must be on a BSD system to use 'pkg' package manager."
fi

